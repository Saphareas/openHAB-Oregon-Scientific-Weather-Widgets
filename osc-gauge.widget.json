{
    "name": "OSC Weather Gauge",
    "author": "Fabian Gro√üe",
    "settings": [
        {
            "type": "item",
            "id": "oh_item",
            "default": ""
        },
        {
            "type": "number",
            "id": "title_size",
            "default": "",
            "description": "in vw units"
        },
        {
            "type": "string",
            "id": "unit",
            "default": "%"
        },
        {
            "type": "string",
            "id": "value_format",
            "default": "%.1f"
        },
        {
            "type": "color",
            "id": "value_color",
            "default": "rgb(120,250,120)"
        },
        {
            "type": "string",
            "id": "thresholds",
            "description": "E.g. '10:blue,25:red' means, that if item value is below 10 it will be blue, if it's above 25 it will be red. If it's in between, it will be the color you set above.",
            "default": "25:orange,75:cyan"
        }
    ],
    "template": "<style> \n  .osc-gauge {\n    width: 90%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: min-content 1fr;\n  }  \n  .osc-gauge-title {\n  \tgrid-row: 1;  \n  }  \n  .osc-gauge svg {\n  \tgrid-row: 2;\n  }\n</style>\n\n<main class=\"osc-body osc-gauge\">  \n  <div class=\"osc-gauge-title\" ng-style=\"{'font-size':config.title_size != '' ? config.title_size+'vw' : 'inherit', 'margin-bottom':config.title_size != '' ? config.title_size/2+'vw' : 'inherit'}\" ng-if=\"ngModel.name\">\n    <span>{{ngModel.name}}</span>\n  </div>  \n  <svg viewBox=\"0 0 100 50\">\n    <path d=\"M1,50 A49,49 0 0 1 33,4\" stroke=\"{{config.thresholds != '' ? config.thresholds.split(',')[0].split(':')[1] : config.value_color}}\" \n          stroke-width=\"2\" fill=\"transparent\"/>\n    <path d=\"M1,50 A49,49 0 0 1 33,4\" stroke=\"{{config.value_color}}\" \n          stroke-width=\"2\" fill=\"transparent\" transform=\"rotate({{180 * 0.33}},50,50)\"/>\n    <path d=\"M1,50 A49,49 0 0 1 33,4\" stroke=\"{{config.thresholds != '' ? config.thresholds.split(',')[1].split(':')[1] : config.value_color}}\" \n          stroke-width=\"2\" fill=\"transparent\" transform=\"rotate({{180 * 0.66}},50,50)\"/>\n  \t<path d=\"M10,50 A40,40 0 0 1 90,50\" fill=\"transparent\" stroke=\"rgba(255,255,255,.2)\" stroke-width=\"20\"/>\n    <path d=\"M89,50 A39,39 0 0 1 11,50\" fill=\"transparent\"\n          transform=\"rotate({{1.8 * itemValue(config.oh_item)}},50,50)\"\n          stroke=\"{{itemValue(config.oh_item) < config.thresholds.split(',')[0].split(':')[0] ? config.thresholds.split(',')[0].split(':')[1] : itemValue(config.oh_item) > config.thresholds.split(',')[1].split(':')[0] ? config.thresholds.split(',')[1].split(':')[1] : config.value_color}}\"\n          stroke-width=\"18\"\n    />\n    <text y=\"50\" transform=\"translate(50)\" fill=\"{{itemValue(config.oh_item) < config.thresholds.split(',')[0].split(':')[0] ? config.thresholds.split(',')[0].split(':')[1] : itemValue(config.oh_item) > config.thresholds.split(',')[1].split(':')[0] ? config.thresholds.split(',')[1].split(':')[1] : config.value_color}}\">\n      <tspan x=\"0\" text-anchor=\"middle\">{{config.value_format != \"\" ? config.value_format : \"%f\" | sprintf:itemValue(config.oh_item)}}&nbsp;{{config.unit}}</tspan>\n    </text>\n\t</svg>  \n</main>"
}